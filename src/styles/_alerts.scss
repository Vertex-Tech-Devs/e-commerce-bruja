@use 'variables' as *;
@use 'mixins' as *;

// Base alert styles
.alert {
  position: relative;
  padding: $spacing-md;
  margin-bottom: $spacing-md;
  border: 1px solid transparent;
  border-radius: $border-radius;
  font-size: $font-size-base;
  line-height: $line-height-base;
}

// Alert variants
.alert-primary {
  color: darken($color-primary, 10%);
  background-color: lighten($color-primary, 35%);
  border-color: lighten($color-primary, 30%);
}

.alert-secondary {
  color: darken($color-secondary, 10%);
  background-color: lighten($color-secondary, 35%);
  border-color: lighten($color-secondary, 30%);
}

.alert-success {
  color: darken($color-success, 10%);
  background-color: lighten($color-success, 35%);
  border-color: lighten($color-success, 30%);
}

.alert-danger {
  color: darken($color-error, 10%);
  background-color: lighten($color-error, 35%);
  border-color: lighten($color-error, 30%);
}

.alert-warning {
  color: darken($color-warning, 10%);
  background-color: lighten($color-warning, 35%);
  border-color: lighten($color-warning, 30%);
}

.alert-info {
  color: darken($color-info, 10%);
  background-color: lighten($color-info, 35%);
  border-color: lighten($color-info, 30%);
}

// Alert with icon
.alert-icon {
  display: flex;
  align-items: flex-start;
  gap: $spacing-sm;

  .alert-icon-svg {
    flex-shrink: 0;
    width: 1.25rem;
    height: 1.25rem;
  }

  .alert-content {
    flex: 1;
  }
}

// Alert with close button
.alert-dismissible {
  padding-right: $spacing-xl;

  .btn-close {
    position: absolute;
    top: 0;
    right: 0;
    padding: $spacing-md;
    background: transparent;
    border: 0;
    cursor: pointer;
    color: inherit;
    opacity: 0.5;
    transition: opacity $transition-base;

    &:hover {
      opacity: 1;
    }
  }
}

// Alert with animation
.alert-animated {
  animation: alert-slide-in 0.3s ease-out;
}

@keyframes alert-slide-in {
  from {
    transform: translateY(-100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

// Alert with progress bar
.alert-progress {
  position: relative;
  overflow: hidden;

  .alert-progress-bar {
    position: absolute;
    bottom: 0;
    left: 0;
    height: 3px;
    background-color: currentColor;
    opacity: 0.3;
    animation: alert-progress 5s linear forwards;
  }
}

@keyframes alert-progress {
  from {
    width: 100%;
  }
  to {
    width: 0;
  }
}

// Alert with action buttons
.alert-actions {
  display: flex;
  gap: $spacing-sm;
  margin-top: $spacing-sm;
}

// Alert with custom styles
.alert-custom {
  background-color: var(--color-surface);
  border-color: var(--color-border);
  color: var(--color-text);
}

// Alert with gradient background
.alert-gradient {
  background: linear-gradient(45deg, var(--color-primary), var(--color-secondary));
  color: $color-background;
  border: none;
}

// Alert with shadow
.alert-shadow {
  box-shadow: var(--shadow-md);
}

// Alert with rounded corners
.alert-rounded {
  border-radius: $border-radius-lg;
}

// Alert with no border
.alert-borderless {
  border: none;
}

// Alert with hover effect
.alert-hover {
  cursor: pointer;
  transition: transform $transition-base, box-shadow $transition-base;

  &:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
  }
}

// Alert with badge
.alert-badge {
  position: relative;
  padding-right: $spacing-xl;

  .badge {
    position: absolute;
    top: $spacing-sm;
    right: $spacing-sm;
  }
}

// Alert with loading state
.alert-loading {
  position: relative;
  padding-right: $spacing-xl;

  &::after {
    content: '';
    position: absolute;
    top: 50%;
    right: $spacing-md;
    width: 1rem;
    height: 1rem;
    margin-top: -0.5rem;
    border: 2px solid currentColor;
    border-right-color: transparent;
    border-radius: 50%;
    animation: alert-loading-spinner 0.75s linear infinite;
  }
}

@keyframes alert-loading-spinner {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

// Alert with ripple effect
.alert-ripple {
  position: relative;
  overflow: hidden;

  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 5px;
    height: 5px;
    background: rgba(255, 255, 255, 0.5);
    opacity: 0;
    border-radius: 100%;
    transform: scale(1, 1) translate(-50%);
    transform-origin: 50% 50%;
  }

  &:focus:not(:active)::after {
    animation: ripple 1s ease-out;
  }
}

@keyframes ripple {
  0% {
    transform: scale(0, 0);
    opacity: 0.5;
  }
  100% {
    transform: scale(20, 20);
    opacity: 0;
  }
} 